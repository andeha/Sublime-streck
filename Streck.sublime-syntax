%YAML 1.2  # Streck.tmLanguage.sublime-syntax.
---
name: Streck language
uuid: e5a8a9c4-cb71-4006-84a5-30a3ad8553fe
file_extensions: [streck]
hidden_file_extensions: [event before]
scope: source.streck
version: 2

variables:
  monetary: '[[:digit:]_]+.[[:digit:]_][[:digit:]_]'
  date: '[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]'
  time: '[0-9][0-9]:[0-9][0-9]:[0-9][0-9]'
  letter: '[a-zA-Z‚Çã]'
  letter_alt_digit: '[a-zA-Z0-9‚Çã]'

contexts:

  main:
    - match: "/\\*" # not sorted patterns. Nesting unresolved.
      scope: punctuation.definition.comment.streck
      push:
        - meta_scope: comment.block.streck
        - match: "\\*/"
          scope: punctuation.definition.comment.streck
          pop: true
    - match: "//"
      scope: punctuation.definition.comment.streck
      push:
        # This is an anonymous context push for brevity.
        - meta_scope: comment.line.streck
        - match: $
          scope: punctuation.definition.comment.streck
          pop: true
    - include: keyword_natural
    - include: keyword_symbols
    - include: keyword_conditional
    - include: keyword_arithmetic_operation
    - include: keyword_logic_operation
    - include: keyword_constructist
    - include: keyword_physical
    - include: function_definition
    - include: keyword_schedule
    - include: keyword_superfluous
    - include: keyword_lineartime
    - include: intrinsic_function
    - include: intrinsic_variable
    - include: country_code
    - include: cyclicity
    - include: instant
    - include: units_of_account
    - match: ({{letter}}{{letter_alt_digit}}*)
      comment: "Identifier begins with a letter."
      scope: variable.other.streck
    - match: "'"
      comment: "Unicode sequences begin and end with a quote."
      scope: punctuation.definition.string.begin.streck
      push:
        - meta_include_prototype: false
        - meta_scope: string.quoted.single.streck
        - match: "''"
          scope: string.quoted.single.streck
        - match: "'"
          scope: punctuation.definition.string.end.streck
          pop: true
  
  units_of_account:
    - match: ({{monetary}})
      comment: "Monetary always given with two decimals."
      scope: constant.numeric.integer.monetary.streck
  
  instant:
    - match: ({{date}}.*{{time}})
      comment: "An instant is a calendric date then a local time."
      scope: program.instant.streck
  
  country_code:
    - match: \b(ABW|AFG|AGO|ALB|NOR|SWE|USA|ZMB|ZWE)
      scope: variable.other.definition.streck
  
  intrinsic_variable:
    - match: \b(PreviousAccountingYear|ThisAccountingYear)\b
      scope: support.constant.streck
  
  intrinsic_function:
    - match: \b(Uniform|Normal|Debetsum|Creditsum|Convert)\b
      scope: support.function.streck
  
  cyclicity:
    - match: \b(BI\-ENNIAL|QUADRENNIAL|ANNUAL|BI\-MONTHLY|MONTHLY|WEEKLY|DAILY)\b
      scope: constant.language.streck 
  # Conflation: 'occuring-every' alternatively 'lasting-for'.
  # not 'intervallic with constant duration' a‚Ä§ùò¨‚Ä§a 'regular periods of time'.
  # ùò¶‚Ä§ùò® 'for 5 minutes UNTIL|STARTING' and BI-ENNIAL='occurring every two 
  # years/continuing' alternatively 'lasting for two years'.
  
  keyword_superfluous:
    - match: \b(EXCHANGE|RATE|CURRENCY)\b
      scope: keyword.control.streck
  
  keyword_lineartime:
   - match: \b(SCHEDULE|STARTING|OCCURING|ENDING|DROP\-SCHEDULE)\b
     scope: keyword.control.streck
  
  keyword_constructist:
   - match: \b(CREATE|NAMED|TRADING|IN|RESIDENT|IS|WITH\-ENTITY|TO)\b
     scope: keyword.control.streck
  
  function_definition:
   - match: \b(TRANSCRIPT)\b
     scope: keyword.definition.function.streck
  
  keyword_schedule:
   - match: \b(DISPLAY|FROM)\b
     scope: keyword.control.streck
  
  keyword_physical:
   - match: \b(ENTITY|ACCOUNT|TABLE)\b
     scope: keyword.control.streck
  
  keyword_logic_operation:
   - match: \&\&|\|\||!|\^
     scope: keyword.operator.streck
  
  keyword_arithmetic_operation:
   - match: \+|\-|\*|/
     scope: keyword.operator.streck
  
  keyword_conditional:
   - match: \b(DO|IF|THEN|ELSE|END|BEFORE)\b
     scope: keyword.control.conditional.streck
  
  keyword_symbols:
   - match: \b(VAR|RETURN)\b
     scope: keyword.global‚Çãsymbolic.streck

  keyword_natural:
   - match: \b(BOOKKEEP|DEBET|CREDIT|COMMENT|WITH|PRINT|BREAK|SET)\b
     scope: keyword.control.streck

