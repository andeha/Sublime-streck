%YAML 1.2  # Streck.tmLanguage.sublime-syntax.
---
name: Streck language
uuid: e5a8a9c4-cb71-4006-84a5-30a3ad8553fe
file_extensions: [streck]
hidden_file_extensions: [event]
scope: source.streck
version: 2

variables:
  monetary: "[[:digit:]]+.[[:digit:]][[:digit:]]"
  date: "[0-9][0-9]-[0-9][0-9]-[0-9][0-9]"
  time: "[0-9][0-9]:[0-9][0-9]:[0-9][0-9]"
  letter: "[a-zA-Z₋]"
  letterAltDigit: "[a-zA-Z0-9₋]"

contexts:

  main:
    - include: keyword_natural
    - include: keyword_conditional
    - include: keyword_arithmetic_operation
    - include: keyword_logic_operation
    - include: keyword_constructist
    - include: function_definition
    - include: keyword_schedule
    - include: keyword_superfluous
    - include: keyword_linear
    - include: country_code
    - include: intrinsic_variable
    - include: intrinsic_function
    - include: cyclicity
    - include: ident
    - include: strings
    - include: comment
    - include: instant
  
  strings:
    - match: "'"
      comment: "Strings begin and end with single quote."
      scope: punctuation.definition.string.begin.streck
      push: line_string
  line_string:
    - meta_include_prototype: false
    - meta_scope: string.quoted.single.streck
    - match: "\\."
      scope: constant.character.escape.streck
    - match: "'"
      scope: punctuation.definition.string.end.streck
      pop: true
  
  comment:
    - match: "//"
      scope: punctuation.definition.comment.streck
      push:
        # This is an anonymous context push for brevity.
        - meta_scope: comment.line.streck
        - match: $
          pop: true
    - match: /\*
      scope: punctuation.definition.comment.streck
      push:
        - meta_scope: comment.block.streck
        - match: \*/
          pop: true
  
  monetary:
    - match: "[:monetary:]"
      comment: "Monetary always given with two decimals."
      scope: constant.numeric.integer.monetary.streck
  
  instant:
    - match: "[:date:][:time:]"
      comment: "An instant is a date then a time."
      scope: constant.other.instant.streck
  
  ident:
    - match: "[:letter:][:letterAltDigit:]*"
      comment: "An identifier begin with a letter."
      scope: entity.name.streck
  
  country_code:
    - match: \b(ABW|AFG|AGO|ALB|NOR|SWE|USA|ZMB|ZWE)
      scope: variable.other.definition.streck
  
  intrinsic_variable:
    - match: \b(PreviousAccountingYear|ThisAccountingYear)\b
      scope: support.constant.streck
  
  intrinsic_function:
    - match: \b(Uniform|Normal|Debetsum|Creditsum|Convert)\b
      scope: support.function.streck
  
  cyclicity:
    - match: \b(MONTHLY|HOURLY|BI\-HOURLY)\b
      scope: constant.language.streck
  
  keyword_superfluous:
    - match: \b(EXCHANGE|RATE|CURRENCY)\b
      scope: keyword.control.streck
  
  keyword_lineartime:
   - match: "\\b(SCHEDULE|DISPLAY|TABLE|FROM|STARTING|OCCURING|ENDING|DROP\\-SCHEDULE)\\b"
     scope: keyword.control.streck
  
  function_definition:
   - match: \b(FUNCTION)\b
     scope: keyword.declaration.streck
  
  keyword_schedule:
   - match: \b(DISPLAY|TABLE|FROM|STARTING|OCCURING|ENDING)\b
     scope: keyword.control.streck
  
  keyword_constructist:
   - match: "\\b(CREATE|ENTITY|NAMED|TRADING|IN|RESIDENT|ACCOUNT|IS|WITH\\-ENTITY|TO)\\b"
     scope: keyword.control.streck
  
  keyword_logic_operation:
   - match: \&\&|\|\||!|\^
     scope: keyword.operator.streck
  
  keyword_arithmetic_operation:
   - match: \+|\-|\*|/
     scope: keyword.operator.streck
  
  keyword_conditional:
   - match: \b(DO|IF|THEN|ELSE|END|BEFORE)\b
     scope: keyword.control.conditional.streck
  
  keyword_natural:
   - match: \b(BOOKKEEP|DEBET|CREDIT|COMMENT|WITH|PRINT|BREAK|VAR|SET|RETURN)\b
     scope: keyword.control.streck
